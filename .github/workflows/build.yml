name: Build & Attach Executables

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux
          - os: ubuntu-latest
            os_name: linux
            arch: x64
            target: x86_64-unknown-linux-gnu
            ext: ""
          - os: ubuntu-24.04-arm
            os_name: linux
            arch: arm64
            target: aarch64-unknown-linux-gnu
            ext: ""

          # Windows
          - os: windows-latest
            os_name: windows
            arch: x64
            target: x86_64-pc-windows-msvc
            ext: ".exe"
          - os: windows-11-arm
            os_name: windows
            arch: arm64
            target: aarch64-pc-windows-msvc
            ext: ".exe"

          # macOS
          - os: macos-13
            os_name: macos
            arch: x64
            target: x86_64-apple-darwin
            ext: ""
          - os: macos-latest
            os_name: macos
            arch: arm64
            target: aarch64-apple-darwin
            ext: ""

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install Rust target (fallback)
        run: rustup target add ${{ matrix.target }}

      - name: Build release binary
        run: cargo build --release --target=${{ matrix.target }}

      - name: Prepare asset name
        id: prepare-asset
        shell: bash
        run: |
          ASSET_NAME="whitespine-${{ github.event.release.tag_name }}-${{ matrix.os_name }}-${{ matrix.arch }}${{ matrix.ext }}"
          echo "asset_name=${ASSET_NAME}" >> "$GITHUB_OUTPUT"

      - name: Copy and rename binary
        shell: bash
        run: |
          cp "target/${{ matrix.target }}/release/whitespine${{ matrix.ext }}" "${{ steps.prepare-asset.outputs.asset_name }}"

      - name: Upload binary to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.prepare-asset.outputs.asset_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
